openapi: 3.0.0
info:
  contact:
    email: joe@bebo.dev
  description: An API for creating and authenticating system users
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: User API
  version: 0.1.0
servers:
- description: localhost test endpoint
  url: http://localhost:8080
tags:
- description: API operations
  name: Auth API
paths:
  /ping:
    get:
      description: returns the hostname of the server running this service
      operationId: ping
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
          description: server responded
      summary: tests this api
      tags:
      - Auth API
  /addAccount:
    put:
      description: Adds a new user account to the system
      operationId: addAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccountDetails'
        description: the user account to add
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewUserAccount'
          description: StatusCreated, user account created
        "400":
          description: StatusBadRequest
        "409":
          description: StatusConflict, a user with the supplied username already exists
      summary: adds a new account
      tags:
      - Auth API
  /authenticate:
    post:
      description: Authenticates a user with the system
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        description: the user to authenticate
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistingUserAccount'
          description: StatusAccepted, user authenticated
        "400":
          description: StatusBadRequest
        "401":
          description: StatusUnauthorized, not authenticated
      summary: authenticates an existing user
      tags:
      - Auth API
components:
  schemas:
    PingResponse:
      example:
        hostname: localhost
      properties:
        hostname:
          description: a computer hostname
          example: localhost
          type: string
      required:
      - hostname
      type: object
    UserAccountDetails:
      example:
        password: password
        accountType: 1
        username: joe
      properties:
        accountType:
          description: describes the type of an account (1 = super user, 2 = business
            user, 3 = end user)
          example: 1
          type: integer
        username:
          description: the username of an account
          example: joe
          type: string
        password:
          description: the password of an account
          example: password
          type: string
      required:
      - accountType
      - password
      - username
      type: object
    NewUserAccount:
      example:
        created: true
        id: 123
      properties:
        id:
          description: the id of an account
          example: 123
          type: integer
        created:
          description: describes whether an account was created
          example: true
          type: boolean
      required:
      - created
      - id
    ExistingUserAccount:
      example:
        authenticated: true
        id: 123
      properties:
        id:
          description: the id of an account
          example: 123
          type: integer
        authenticated:
          description: describes whether an account was authenticated
          example: true
          type: boolean
      required:
      - authenticated
      - id
    UserCredentials:
      example:
        password: password
        username: joe
      properties:
        username:
          description: the username of an account
          example: joe
          type: string
        password:
          description: the password of an account
          example: password
          type: string
      required:
      - password
      - username
      type: object
