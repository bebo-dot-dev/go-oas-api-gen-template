/*
 * User API
 *
 * An API for creating and authenticating system users
 *
 * API version: 0.1.0
 * Contact: joe@bebo.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// UserAccountDetails struct for UserAccountDetails
type UserAccountDetails struct {
	AccountType int32  `json:"accountType"`
	Username    string `json:"username"`
	Password    string `json:"password"`
}

// NewUserAccountDetails instantiates a new UserAccountDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAccountDetails(accountType int32, username string, password string) *UserAccountDetails {
	this := UserAccountDetails{}
	this.AccountType = accountType
	this.Username = username
	this.Password = password
	return &this
}

// NewUserAccountDetailsWithDefaults instantiates a new UserAccountDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAccountDetailsWithDefaults() *UserAccountDetails {
	this := UserAccountDetails{}
	return &this
}

// GetAccountType returns the AccountType field value
func (o *UserAccountDetails) GetAccountType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
func (o *UserAccountDetails) GetAccountTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountType, true
}

// SetAccountType sets field value
func (o *UserAccountDetails) SetAccountType(v int32) {
	o.AccountType = v
}

// GetUsername returns the Username field value
func (o *UserAccountDetails) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *UserAccountDetails) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *UserAccountDetails) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *UserAccountDetails) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *UserAccountDetails) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *UserAccountDetails) SetPassword(v string) {
	o.Password = v
}

func (o UserAccountDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountType"] = o.AccountType
	}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableUserAccountDetails struct {
	value *UserAccountDetails
	isSet bool
}

func (v NullableUserAccountDetails) Get() *UserAccountDetails {
	return v.value
}

func (v *NullableUserAccountDetails) Set(val *UserAccountDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAccountDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAccountDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAccountDetails(val *UserAccountDetails) *NullableUserAccountDetails {
	return &NullableUserAccountDetails{value: val, isSet: true}
}

func (v NullableUserAccountDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAccountDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
